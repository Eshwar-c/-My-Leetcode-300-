class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] ans  =  {-1 , -1};
        if(nums.length ==0 ){
            return ans;
        }
        ans[0] = findTarget(nums , target);
        ans[1] = findLast(nums , target);
        return ans ;
    }
    public int findTarget(int[] nums , int target){
        int l  = 0;
        int r  =  nums.length-1;
        int index = -1;
        while(l <= r){
            int mid  =  l +(r-l) /2;
            if(nums[mid] == target){
                index = mid;  
                r= mid-1;
            }
            else if(nums[mid] < target){
                l = mid+1;
            }
            else{
                r = mid-1;
            }
        }
        return index;
    }
    public int findLast(int[] nums, int target) {
        int l = 0;
        int r = nums.length - 1;
        int index = -1;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if (nums[mid] == target) {
                index = mid;
                l = mid + 1; // move right
            } else if (nums[mid] < target) {
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return index;
    }
}
